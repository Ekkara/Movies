<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Movies</name>
    </assembly>
    <members>
        <member name="M:Movies.Controllers.CharactersController.GetCharacters">
            <summary>
            Gets all character resources
            </summary>
            <returns>List of characters</returns>
        </member>
        <member name="M:Movies.Controllers.CharactersController.GetCharacter(System.Int32)">
            <summary>
            Get character with a specific ID
            </summary>
            <param name="id"></param>
            <returns>A given character</returns>
        </member>
        <member name="M:Movies.Controllers.CharactersController.PutCharacter(System.Int32,Movies.Models.DTO.Character.CharacterEditDTO)">
            <summary>
            Edit character information
            </summary>
            <param name="id"></param>
            <param name="characterEdit"></param>
            <returns>New character data</returns>
        </member>
        <member name="M:Movies.Controllers.CharactersController.PostCharacter(Movies.Models.DTO.Character.CharacterCreateDTO)">
            <summary>
            Create a new character
            </summary>
            <param name="characterDTO"></param>
            <returns>Created character</returns>
        </member>
        <member name="M:Movies.Controllers.CharactersController.DeleteCharacter(System.Int32)">
            <summary>
            Delete a certain character
            </summary>
            <param name="id"></param>
            <returns>Nothingness left behind</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.GetFranchises">
            <summary>
            Get franchises
            </summary>
            <returns>Franchises</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.GetFranchise(System.Int32)">
            <summary>
            Get a specific franchise by ID
            </summary>
            <param name="id"></param>
            <returns>A given franchise</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.GetMoviesInFranchise(System.Int32)">
            <summary>
            Retrieve movies in a certain franchise
            </summary>
            <param name="franchiseId"></param>
            <returns>Movies from franchise</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.GetCharactersInFranchise(System.Int32)">
            <summary>
            Retrieve characters in a certain franchise
            </summary>
            <param name="franchiseId"></param>
            <returns>Characters from franchise</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.PutFranchise(System.Int32,Movies.Models.DTO.Franchise.FranchiseEditDTO)">
            <summary>
            Edit franchise data
            </summary>
            <param name="id"></param>
            <param name="franchiseEdit"></param>
            <returns>New franchise information</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.PostFranchise(Movies.Models.DTO.Franchise.FranchiseCreateDTO)">
            <summary>
            Create a new franchise
            </summary>
            <param name="franchiseDTO"></param>
            <returns>New franchise</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.DeleteFranchise(System.Int32)">
            <summary>
            Delete a given franchise
            </summary>
            <param name="id"></param>
            <returns>The nothingness left behind</returns>
        </member>
        <member name="M:Movies.Controllers.FranchisesController.UpdateMoviesInFranchise(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Update movies contained in a franchise
            </summary>
            <param name="id"></param>
            <param name="listOfMovies"></param>
            <returns>Updated movie info</returns>
        </member>
        <member name="M:Movies.Controllers.MoviesController.GetMovies">
            <summary>
            Get movie information
            </summary>
            <returns>Movies</returns>
        </member>
        <member name="M:Movies.Controllers.MoviesController.GetMovie(System.Int32)">
            <summary>
            Get a certain movie by ID
            </summary>
            <param name="id"></param>
            <returns>A certain movie</returns>
        </member>
        <member name="M:Movies.Controllers.MoviesController.PutMovie(System.Int32,Movies.Models.DTO.Movie.MovieEditDTO)">
            <summary>
            Edit movie information
            </summary>
            <param name="id"></param>
            <param name="movieEdit"></param>
            <returns>Edited movie details</returns>
        </member>
        <member name="M:Movies.Controllers.MoviesController.PostMovie(Movies.Models.DTO.Movie.MovieCreateDTO)">
            <summary>
            Create a new movie
            </summary>
            <param name="movieDTO"></param>
            <returns>Newly created movie</returns>
        </member>
        <member name="M:Movies.Controllers.MoviesController.DeleteMovie(System.Int32)">
            <summary>
            Delete a given movie
            </summary>
            <param name="id"></param>
            <returns>The nothingness left behind</returns>
        </member>
        <member name="M:Movies.Controllers.MoviesController.GetCharactersInMovie(System.Int32)">
            <summary>
            Get characters in a specific movie
            </summary>
            <param name="movieId"></param>
            <returns>Characters in a given movie</returns>
        </member>
        <member name="M:Movies.Controllers.MoviesController.UpdateCharactersInMovie(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Update info of characters in a certain movie
            </summary>
            <param name="id"></param>
            <param name="listOfCharactersId"></param>
            <returns>New character information</returns>
        </member>
        <member name="T:Movies.Migrations.test">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.test.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.test.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.test.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.test2">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.test2.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.test2.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.test2.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.reset">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.reset.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.reset.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.reset.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.collectionOfId">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.collectionOfId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.collectionOfId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.collectionOfId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.collectionOfCharacters">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.collectionOfCharacters.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.collectionOfCharacters.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.collectionOfCharacters.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.hiddenLinkingTableRemade">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.hiddenLinkingTableRemade.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.hiddenLinkingTableRemade.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.hiddenLinkingTableRemade.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.displayCase">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.displayCase.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.displayCase.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.displayCase.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.finishedHopefully">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.finishedHopefully.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.finishedHopefully.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.finishedHopefully.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Movies.Migrations.donePrettyMuch">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.donePrettyMuch.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.donePrettyMuch.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Movies.Migrations.donePrettyMuch.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
